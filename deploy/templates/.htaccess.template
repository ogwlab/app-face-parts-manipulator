# Face Parts Manipulator - Apache Configuration
# This template is used by deployment scripts
# Variables: {{BASE_PATH}} will be replaced during deployment

# SPAルーティング対応
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase {{BASE_PATH}}
    
    # 存在するファイルは直接提供
    RewriteCond %{REQUEST_FILENAME} -f
    RewriteRule ^.*$ - [NC,L]
    
    # 存在するディレクトリは直接提供
    RewriteCond %{REQUEST_FILENAME} -d
    RewriteRule ^.*$ - [NC,L]
    
    # その他は全てindex.htmlにリダイレクト
    RewriteRule ^.*$ index.html [NC,L]
</IfModule>

# MIMEタイプ設定
AddType application/json .json
AddType application/javascript .js
AddType application/wasm .wasm

# セキュリティヘッダー
<IfModule mod_headers.c>
    # CORS設定（モデルファイル用）
    <FilesMatch "\.(json|wasm)$">
        # 環境変数PRODUCTIONが設定されていない場合（開発環境）
        <If "-z env('PRODUCTION')">
            # 開発環境用: すべてのオリジンを許可
            Header set Access-Control-Allow-Origin "*"
            Header set Access-Control-Allow-Methods "GET, OPTIONS"
            Header set Access-Control-Allow-Headers "Content-Type"
        </If>
        
        # 環境変数PRODUCTIONが設定されている場合（本番環境）
        <If "-n env('PRODUCTION')">
            # 本番環境用: 自己オリジンのみ許可（より安全）
            Header set Access-Control-Allow-Origin "https://%{HTTP_HOST}s"
            Header set Access-Control-Allow-Methods "GET, OPTIONS"
            Header set Access-Control-Allow-Headers "Content-Type"
            Header set Access-Control-Max-Age "86400"
            
            # 特定ドメインのみ許可する場合は下記を使用:
            # Header unset Access-Control-Allow-Origin
            # Header set Access-Control-Allow-Origin "https://yourdomain.com"
        </If>
    </FilesMatch>
    
    # セキュリティヘッダー
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # HSTS（HTTPS強制）- HTTPS使用時のみ有効
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" env=HTTPS
    
    # 機能ポリシー（カメラ・マイクロフォンなど不要な機能を無効化）
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), bluetooth=(), magnetometer=(), gyroscope=(), accelerometer=()"
    
    # ブラウザの自動MIME検出を無効化
    Header always set X-Download-Options "noopen"
    Header always set X-Permitted-Cross-Domain-Policies "none"
    
    # Content Security Policy（環境別設定）
    # 環境変数PRODUCTIONが設定されていない場合（開発環境）
    <If "-z env('PRODUCTION')">
        # 開発環境用: face-api.js (TensorFlow.js) 用に 'unsafe-eval' を許可
        Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self'"
    </If>
    
    # 環境変数PRODUCTIONが設定されている場合（本番環境）
    <If "-n env('PRODUCTION')">
        # 本番環境用: より厳格なCSP（face-api.jsが動作しない場合は 'unsafe-eval' を追加）
        Header always set Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self'; upgrade-insecure-requests"
        
        # 注意: face-api.jsでエラーが発生する場合は下記を使用
        # Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self'; upgrade-insecure-requests"
    </If>
</IfModule>

# キャッシュ設定
<IfModule mod_expires.c>
    ExpiresActive On
    
    # 静的アセット（1年）
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    
    # HTMLファイル（1時間）
    ExpiresByType text/html "access plus 1 hour"
    
    # モデルファイル（1ヶ月）
    ExpiresByType application/json "access plus 1 month"
</IfModule>

# 圧縮設定（パフォーマンス最適化）
<IfModule mod_deflate.c>
    # テキストベースファイル
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml
    
    # JavaScript とスクリプト
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE text/javascript
    
    # データファイル
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/atom+xml
    
    # WebAssembly と SVG（CodeRabbit推奨）
    AddOutputFilterByType DEFLATE application/wasm
    AddOutputFilterByType DEFLATE image/svg+xml
    
    # フォントファイル（TTF/OTFのみ圧縮）
    # 注意: WOFF/WOFF2は既に圧縮済みのため除外
    AddOutputFilterByType DEFLATE font/ttf
    AddOutputFilterByType DEFLATE font/otf
    # AddOutputFilterByType DEFLATE font/woff   # 既に圧縮済み - 除外
    # AddOutputFilterByType DEFLATE font/woff2 # 既に圧縮済み - 除外
    
    # 圧縮レベルの最適化
    DeflateCompressionLevel 6
    
    # 圧縮除外設定（既に圧縮済みファイル）
    SetEnvIfNoCase Request_URI \
        \.(?:gif|jpe?g|png|webp|mp4|webm|mp3|ogg|zip|gz|bz2|rar|7z|woff2?|eot)$ no-gzip dont-vary
</IfModule>

# ファイル保護
<Files "*.template">
    Order deny,allow
    Deny from all
</Files>

<Files ".env*">
    Order deny,allow
    Deny from all
</Files>